plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'

}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.moviesapprappi"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }

}

dependencies {

    def room_version = "2.3.0"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    // coroutines
    def coroutinesVersion = '1.4.3'
    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // binding
    // binding
    def bindablesVersion = '1.0.8'
    implementation "com.github.skydoves:bindables:$bindablesVersion"

    // network
    def retrofitVersion = '2.9.0'
    def okhttpVersion = '4.9.0'
    def gsonVersion = '2.8.5'
    def sandwichVersion = '1.2.0'

    implementation "com.github.skydoves:sandwich:$sandwichVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"


    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    // hilt
    def hiltCoreVersion = '2.38.1'
    def hiltVersion = '1.0.0'
    implementation "com.google.dagger:hilt-android:$hiltCoreVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltCoreVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltCoreVersion"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hiltCoreVersion"

    implementation "com.github.skydoves:bundler:1.0.4"

    // custom view
    implementation "com.ms-square:expandableTextView:0.1.4"

    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"


    // glide
    def glideVersion = '4.12.0'
    def glidePaletteVersion = '2.1.2'

    // whatIf
    def whatIfVersion = '1.1.0'
    implementation "com.github.skydoves:whatif:$whatIfVersion"

    // glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.florent37:glidepalette:$glidePaletteVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // adapter
    def baseAdapterVersion = '1.0.4'

    // adapter
    implementation "com.github.skydoves:baserecyclerviewadapter:$baseAdapterVersion"

    def stethoVersion = '1.5.1'
    implementation "com.facebook.stetho:stetho:$stethoVersion"
    implementation "com.facebook.stetho:stetho-okhttp3:$stethoVersion"


    // architecture components
    // architecture components
    def archCompomentVersion = '2.0.0'
    def lifecycleVersion = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    testImplementation "androidx.arch.core:core-testing:$archCompomentVersion"

}